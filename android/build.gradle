apply plugin: 'com.android.library'

ext {
    artifactId = 'ably-android'
}

android {
    compileSdkVersion 22
    buildToolsVersion '22.0.1'

    defaultConfig {
        buildConfigField 'String', 'LIBRARY_NAME', '"android"'
        minSdkVersion 8
        targetSdkVersion 22
        versionCode 1
        versionName version
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
}

/* Fix for android test logging. Source: https://code.google.com/p/android/issues/detail?id=182307 */
tasks.withType(com.android.build.gradle.internal.tasks.AndroidTestTask) { task ->
    task.doFirst {
        logging.level = LogLevel.INFO
    }
    task.doLast {
        logging.level = LogLevel.LIFECYCLE
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile (project(":core")) { transitive = true}

    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    androidTestCompile 'org.hamcrest:hamcrest-all:1.3'
    androidTestCompile 'junit:junit:4.12'
    androidTestCompile 'com.nanohttpd:nanohttpd:2.2.0'
    androidTestCompile 'org.nanohttpd:nanohttpd-nanolets:2.3.0'
    androidTestCompile 'org.mockito:mockito-core:2.0.17-beta'
    androidTestCompile "com.crittercism.dexmaker:dexmaker:1.4"
    androidTestCompile "com.crittercism.dexmaker:dexmaker-dx:1.4"
    androidTestCompile "com.crittercism.dexmaker:dexmaker-mockito:1.4"
    androidTestCompile project(path: ':core', configuration: 'coreTestsConfiguration')

    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'junit:junit:4.12'
    testCompile 'com.nanohttpd:nanohttpd:2.2.0'
    testCompile 'org.nanohttpd:nanohttpd-nanolets:2.3.0'
    testCompile 'org.mockito:mockito-core:2.0.2-beta'
    testCompile project(path: ':core', configuration: 'coreTestsConfiguration')
}

configurations {
    all*.exclude group: 'org.hamcrest', module: 'hamcrest-core'
}

project.gradle.taskGraph.whenReady {
    connectedDebugAndroidTest {
        ignoreFailures = true
    }
}

task copyLibs(type: Copy){
    from configurations.compile
    into 'libs'
}

task cleanLibs(type: Delete) {
    delete fileTree(dir: "libs")
}

task fullAar(type: Task) {
    gradle.startParameter.taskNames.findAll { it.endsWith('assemble') }
            .each { copyLibs.execute() }
    gradle.startParameter.taskNames.findAll {  !it.endsWith('assemble') }
            .each { clean.execute(); cleanLibs.execute() }
}

preBuild.dependsOn(fullAar)
assemble.doLast{ cleanLibs.execute() }

apply from: '../core/maven_android.gradle'
